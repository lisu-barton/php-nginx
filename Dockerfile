FROM php:7.0.0-fpm

# Install modules
RUN apt-get update \
    && apt-get install -y wget git unzip autoconf graphviz libcurl4-openssl-dev \
    && apt-get install -y libjpeg62-turbo-dev libpng12-dev libfreetype6-dev libmcrypt-dev \
    && apt-get install -y libreadline-dev libncurses5-dev libpcre3-dev libssl-dev perl make build-essential cron \
    && rm -r /var/lib/apt/lists/*

RUN docker-php-ext-install pdo pdo_mysql mbstring opcache iconv mcrypt \
    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
    && docker-php-ext-install gd

COPY pcurl /home/pcurl

RUN cd /home/pcurl \
    && phpize \
    && ./configure \
    && make \
    && make install

RUN echo "extension=pcurl.so" > /usr/local/etc/php/conf.d/pcurl.ini

# Install OneAPM, 监控性能，只在一台机器上安装
# RUN wget http://7xlefj.com1.z0.glb.clouddn.com/OneApm_php_Agent_1.0.0.27.zip \
#    && unzip OneApm_php_Agent_1.0.0.27.zip \
#    && cd OneApm_php_Agent_1.0.0.27/oneapm-php5-linux-install-script \
#    && chmod 755 oneapm-install \
#    && ./oneapm-install install --php-path=/usr/local/bin --license=AlRfBA4CAlA7ff3FHFsTVFRJCk615eIKCh8EAQRQH105fAEHSwgASVYG88edV1MeBwAYVAU=
# RUN echo "extension=oneapm.so" > /usr/local/etc/php/conf.d/oneapm.ini
# RUN echo 'oneapm.key = "AlRfBA4CAlA7ff3FHFsTVFRJCk615eIKCh8EAQRQH105fAEHSwgASVYG88edV1MeBwAYVAU="' >> /usr/local/etc/php/conf.d/oneapm.ini
# RUN echo 'oneapm.http_ignored_params=access_token,acount,acount_tx_sn_binding,bank_reserved_phone,id_number,idcard_number,name,order_amount,phone,phoneVerifyCode,token,username,verification_code' >> /usr/local/etc/php/conf.d/oneapm.ini

# RUN apt-get update && apt-get install -y supervisor && rm -r /var/lib/apt/lists/*

RUN mkdir /usr/local/log
COPY php-fpm.conf /usr/local/etc/php/
#COPY supervisord.conf /etc/supervisord.conf

ENV OPENRESTY_VERSION 1.9.7.3

RUN wget http://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz \
    && tar -zxvf openresty-${OPENRESTY_VERSION}.tar.gz \
    && cd openresty-${OPENRESTY_VERSION} \
    && ./configure --with-luajit \
    && make && make install

RUN ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \
    && ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log

COPY nginx.conf /usr/local/openresty/nginx/conf/nginx.conf
COPY crontab /etc/crontab

ADD cutlog.sh /opt/cutlog.sh
RUN chmod a+x /opt/cutlog.sh

COPY entrypoint.sh /opt/entrypoint.sh
RUN chmod a+x /opt/entrypoint.sh

##<autogenerated>##
WORKDIR /code

EXPOSE 80
VOLUME ["/code", "/data"]
CMD ["/opt/entrypoint.sh"]
##</autogenerated>##